
package com.radvision.icm.service;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAXWS SI.
 * JAX-WS RI 2.1-02/02/2007 03:56 AM(vivekp)-FCS
 * Generated source version: 2.1
 * 
 */
@WebService(name = "UserServicePortType", targetNamespace = "http://radvision.com/icm/service/userservice")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface UserServicePortType {


    /**
     * 
     * @param loginId
     * @return
     *     returns com.radvision.icm.service.UserInfo
     * @throws UserNotExistedException_Exception
     */
    @WebMethod
    @WebResult(name = "result", targetNamespace = "")
    @RequestWrapper(localName = "getUserByLoginId", targetNamespace = "http://radvision.com/icm/service/userservice", className = "com.radvision.icm.service.GetUserByLoginId")
    @ResponseWrapper(localName = "getUserByLoginIdResponse", targetNamespace = "http://radvision.com/icm/service/userservice", className = "com.radvision.icm.service.GetUserByLoginIdResponse")
    public UserInfo getUserByLoginId(
        @WebParam(name = "loginId", targetNamespace = "")
        String loginId)
        throws UserNotExistedException_Exception
    ;

    /**
     * 
     * @param loginId
     * @return
     *     returns java.util.List<com.radvision.icm.service.UserInfo>
     */
    @WebMethod
    @WebResult(name = "result", targetNamespace = "")
    @RequestWrapper(localName = "searchUsersByLoginId", targetNamespace = "http://radvision.com/icm/service/userservice", className = "com.radvision.icm.service.SearchUsersByLoginId")
    @ResponseWrapper(localName = "searchUsersByLoginIdResponse", targetNamespace = "http://radvision.com/icm/service/userservice", className = "com.radvision.icm.service.SearchUsersByLoginIdResponse")
    public List<UserInfo> searchUsersByLoginId(
        @WebParam(name = "loginId", targetNamespace = "")
        String loginId);

    /**
     * 
     * @param userInfos
     * @return
     *     returns com.radvision.icm.service.UserResult
     */
    @WebMethod
    @WebResult(name = "result", targetNamespace = "")
    @RequestWrapper(localName = "setUsers", targetNamespace = "http://radvision.com/icm/service/userservice", className = "com.radvision.icm.service.SetUsers")
    @ResponseWrapper(localName = "setUsersResponse", targetNamespace = "http://radvision.com/icm/service/userservice", className = "com.radvision.icm.service.SetUsersResponse")
    public UserResult setUsers(
        @WebParam(name = "UserInfos", targetNamespace = "")
        List<UserInfo> userInfos);

    /**
     * 
     * @param useIds
     * @return
     *     returns com.radvision.icm.service.UserResult
     */
    @WebMethod
    @WebResult(name = "result", targetNamespace = "")
    @RequestWrapper(localName = "deleteUsers", targetNamespace = "http://radvision.com/icm/service/userservice", className = "com.radvision.icm.service.DeleteUsers")
    @ResponseWrapper(localName = "deleteUsersResponse", targetNamespace = "http://radvision.com/icm/service/userservice", className = "com.radvision.icm.service.DeleteUsersResponse")
    public UserResult deleteUsers(
        @WebParam(name = "useIds", targetNamespace = "")
        List<String> useIds);

    /**
     * 
     * @param useIds
     * @return
     *     returns java.util.List<com.radvision.icm.service.UserInfo>
     */
    @WebMethod
    @WebResult(name = "result", targetNamespace = "")
    @RequestWrapper(localName = "getUsers", targetNamespace = "http://radvision.com/icm/service/userservice", className = "com.radvision.icm.service.GetUsers")
    @ResponseWrapper(localName = "getUsersResponse", targetNamespace = "http://radvision.com/icm/service/userservice", className = "com.radvision.icm.service.GetUsersResponse")
    public List<UserInfo> getUsers(
        @WebParam(name = "useIds", targetNamespace = "")
        List<String> useIds);

    /**
     * 
     * @param userSearchCondition
     * @return
     *     returns java.util.List<com.radvision.icm.service.UserInfo>
     */
    @WebMethod
    @WebResult(name = "result", targetNamespace = "")
    @RequestWrapper(localName = "searchUsers", targetNamespace = "http://radvision.com/icm/service/userservice", className = "com.radvision.icm.service.SearchUsers")
    @ResponseWrapper(localName = "searchUsersResponse", targetNamespace = "http://radvision.com/icm/service/userservice", className = "com.radvision.icm.service.SearchUsersResponse")
    public List<UserInfo> searchUsers(
        @WebParam(name = "userSearchCondition", targetNamespace = "")
        UserSearchConditon userSearchCondition);

    /**
     * 
     * @param loginId
     * @param pwd
     * @return
     *     returns com.radvision.icm.service.UserResult
     */
    @WebMethod
    @WebResult(name = "result", targetNamespace = "")
    @RequestWrapper(localName = "authUser", targetNamespace = "http://radvision.com/icm/service/userservice", className = "com.radvision.icm.service.AuthUser")
    @ResponseWrapper(localName = "authUserResponse", targetNamespace = "http://radvision.com/icm/service/userservice", className = "com.radvision.icm.service.AuthUserResponse")
    public UserResult authUser(
        @WebParam(name = "loginId", targetNamespace = "")
        String loginId,
        @WebParam(name = "pwd", targetNamespace = "")
        String pwd);

}
